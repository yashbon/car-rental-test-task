{"version":3,"file":"static/js/445.f6dae5ad.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactButtonDel/ContactButtonDel.module.css?52ba","components/ContactButtonDel/ContactButtonDel.jsx","components/ContactLitsItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ConactList/ContactList.module.css?147d","components/ConactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"deleteContact_Button\":\"ContactButtonDel_deleteContact_Button__wGFdV\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport css from './ContactButtonDel.module.css';\nimport { useEffect } from 'react';\n\nconst ContactButtonDel = ({ contactId }) => {\n    const dispatch = useDispatch();\n    const handleDeleteContact = () => {\n        dispatch(deleteContact(contactId));\n    };\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            <button\n                className={css.deleteContact_Button}\n                type=\"button\"\n                onClick={handleDeleteContact}\n            >\n                delete\n            </button>\n        </>\n    );\n};\n\nexport default ContactButtonDel;\n","import ContactButtonDel from 'components/ContactButtonDel/ContactButtonDel';\n\nconst ConactListItem = ({ contact }) => {\n    return (\n        <>\n            <p style={{ margin: 0 }}>\n                <span>{contact.name}</span> <br />\n                <span>{contact.number}</span>\n            </p>\n            <ContactButtonDel contactId={contact.id} />\n        </>\n    );\n};\n\nexport default ConactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__hvKAJ\",\"contactListItem\":\"ContactList_contactListItem__fYQ8F\"};","import ConactListItem from 'components/ContactLitsItem/ContactListItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactList.module.css';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n    const contacts = useSelector(state => state.contacts.list);\n    const filter = useSelector(state => state.filter.filter);\n\n    const filteredContacts = contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            {filteredContacts.length > 0 && (\n                <ul className={css.contactList}>\n                    {filteredContacts.map(contact => (\n                        <li\n                            className={css.contactListItem}\n                            key={contact.id}\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'space-between',\n                            }}\n                        >\n                            <ConactListItem contact={contact} />\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </>\n    );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"form_button\":\"ContactForm_form_button__3kup0\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n    const contacts = useSelector(state => state.contacts);\n    const dispatch = useDispatch();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const { name, phone } = event.target.elements;\n\n        if (\n            contacts.list.find(\n                contact =>\n                    contact.name.toLowerCase() === name.value.toLowerCase()\n            )\n        ) {\n            alert(`${name.value} is already in contacts`);\n        } else {\n            const newContact = {\n                name: name.value,\n                number: phone.value,\n            };\n            dispatch(addContact(newContact));\n        }\n        event.target.reset();\n    };\n\n    return (\n        <form className={css.form} onSubmit={handleSubmit}>\n            <label className={css.label}>\n                Name\n                <br />\n                <input\n                    className={css.input}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n            </label>\n            <br />\n            <label className={css.label}>\n                Phone\n                <br />\n                <input\n                    className={css.input}\n                    type=\"tel\"\n                    name=\"phone\"\n                    pattern=\"^[0-9]+$\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                />\n            </label>\n            <br />\n            <button className={css.form_button} type=\"submit\">\n                Add contact\n            </button>\n        </form>\n    );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch } from 'react-redux';\nimport { applyFilter } from 'redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n    // const filter = useSelector(state => state.filter);\n    // console.log(filter);\n\n    // const filteredContacts = contacts.filter(contact =>\n    //     contact.name.toLowerCase().includes(filter.toLowerCase())\n    // );\n\n    const dispatch = useDispatch();\n\n    const handleChange = event => {\n        dispatch(applyFilter(event.target.value));\n    };\n    return (\n        <>\n            <label>Find contacts by name</label>\n            <input\n                className={css.filterInput}\n                type=\"text\"\n                name=\"name\"\n                autoFocus={true}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                onChange={handleChange}\n            />\n        </>\n    );\n};\n\nexport default Filter;\n","import ContactList from 'components/ConactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\n\nconst Contacts = () => {\n    return (\n        <>\n            <h2>Add a new contact</h2>\n            <ContactForm />\n            <h2>Contacts</h2>\n            <Filter />\n            <ContactList />\n        </>\n    );\n};\n\nexport default Contacts;\n"],"names":["contactId","dispatch","useDispatch","useEffect","fetchContacts","className","css","type","onClick","deleteContact","contact","style","margin","name","number","id","contacts","useSelector","state","list","filter","filteredContacts","toLowerCase","includes","length","map","display","justifyContent","onSubmit","event","preventDefault","target","elements","phone","find","value","alert","newContact","addContact","reset","pattern","title","required","autoFocus","onChange","applyFilter"],"sourceRoot":""}